<exporter version="1.0"> <!-- file format version, must be 1.0 -->

    <!-- Identifier for the exporter - should be unique.
         This value is stored when the exporter is referenced from a saved file (.tps).
         It is also used to select the exporter from command line.
         Change this if you duplicated an existing exporter -->
    <name>esmodule</name>

    <!-- Name of the exporter that is shown in the framework selector dialog -->
    <!-- Change this if you duplicated an existing exporter -->
    <displayName>ES Module</displayName>

    <!-- A description of the exporter -->
    <description>ES-Module script format for H5 Game engine.</description>

    <!-- Exporter version -->
    <version>1.0</version>

    <files>

        <!-- A list of data files which should be generated during the publish process -->
        <file>

            <!-- name of this file type; used in the tps file
                 and by the commandline client: for each MYDATA file
                 a commandline option "- -MYDATA-file" is evaluated
                 (remark: write the option without the blank between the "-" signs,
                 it's required in the XML comment)  -->
            <name>export-syntax</name>

            <!-- human readable name (used in the TexturePacker GUI) -->
            <displayName>Export syntax</displayName>

            <!-- file extension, without '.' -->
            <fileExtension>js</fileExtension>

            <!-- description what the file contains,
                 used for tooltips in the GUI (optional) -->
            <description>ES-Module script format with `export` syntax.</description>

            <!-- name of the template file -->
            <template>esmodule.js</template>

            <!-- create a file for each multipack sheet
                 (optional, default is 'true') -->
            <hasSeparateMultiPackFiles>false</hasSeparateMultiPackFiles>
        </file>

        <!-- add more <file> ... </file> tags if you need more than one output file -->
    </files>

    <!-- the following elements show/hide the corresponding input fields -->
    <!-- in the TexturePacker user interface -->

    <!-- mandatory flags: -->

    <!-- Set this to true if the target framework supports trimmed sprites (sprites with
         transparency removed). TexturePacker delivers the offsets and size of the
         trimmed sprite to the template system. The user can still choose to disable
         trimming from the user interface. If supportsTrimming is set to false the option
         to enable trimming is not available in the user interface. -->
    <supportsTrimming>true</supportsTrimming>

    <!-- Set this to true if the target framework supports rotated sprites. The user can
         still decide not to enable rotated sprites from the user interface.
         If supportsRotation is set to false the option to enable sprite rotation is
         not available in the user interface. -->
    <supportsRotation>true</supportsRotation>

    <!-- The direction in which a sprite is rotated - if TexturePacker decides
         to rotate a sprite:
             cw:  clockwise rotation
             ccw: counterclockwise rotation
         The amount of rotation is always 90Â°. Only required for supportsRotation=true -->
    <rotationDirection>cw</rotationDirection>

    <!-- If enabled TexturePacker allows the user to choose non-power-of-2 sizes for sprite
         sheets. Otherwise only power-of-2 (POT) sizes are enabled in the user interface. -->
    <supportsNPOT>true</supportsNPOT>


    <!-- the following flags are optional: -->

    <!-- target framework accepts sprite names without file name extension. (default=false) -->
    <supportsTrimSpriteNames>true</supportsTrimSpriteNames>

</exporter>
